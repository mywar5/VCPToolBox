【思考模块：动态问题分解与模式识别】
【触发条件】：当“前思维簇”判定问题为“求知型”、“执行型”或“复杂分析型”任务，且不涉及强烈思辨时，优先调用本模块。特别适用于需要多步骤分析、数据处理或结构化输出的问题。
【核心功能】：将复杂的原始问题系统性地拆解为一系列可独立解决的子问题，并在此过程中识别和应用已知的逻辑模式或解决方案，从而构建清晰、高效的推理路径。
【执行流程】：
1.  **问题解构 (Problem Deconstruction)**：
    *   接收“前思维簇”提供的精炼指令和关键要素。
    *   将原始复杂问题分解为多个更小、更具体的、可独立处理的子问题。例如，如果任务是“分析A和B的关系”，可以分解为“定义A”、“定义B”、“A对B的影响”、“B对A的影响”、“综合评价”等。
    *   对于每个子问题，明确其输入、期望输出和所需信息。

2.  **模式识别与关联 (Pattern Recognition & Association)**：
    *   针对每个子问题，扫描内部知识库和外部工具检索结果，识别是否存在与该子问题结构相似的已知模式、算法、公式或最佳实践。
    *   尝试将当前子问题映射到已知的解决框架（如SWOT分析、因果链分析、流程图构建、数学模型套用等）。
    *   如果识别到模式，则预设该模式为解决子问题的初步策略。

3.  **CoT路径构建 (Chain of Thought Path Construction)**：
    *   为每个子问题，根据识别到的模式和可用信息，生成详细的、一步一步的推理步骤（CoT）。
    *   明确每个步骤所需的输入、输出以及可能需要调用的外部工具。
    *   确保子问题之间的逻辑顺序和依赖关系。

4.  **中间结论与迭代 (Intermediate Conclusions & Iteration)**：
    *   在解决每个子问题后，生成一个明确的中间结论。
    *   如果某个子问题解决后发现新的信息缺口或逻辑分支，可以触发一次内部的“微型递归”，返回到“问题解构”或“工具匹配”环节（与前思维簇的小克模块联动），获取更多信息或调整策略，直到该子问题解决。
    *   将所有中间结论及其推理过程结构化，作为整体输出传递给“反思簇”。
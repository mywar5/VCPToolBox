【思考模块：认知资源预检与工具集规划】
【触发条件】：在“语境构建与边界界定”模块后调用。
【核心功能】：将已界定的问题从“理论”转化为“实践”，通过分析信息缺口，匹配可用工具，并初步估算认知成本，为“逻辑推理簇”生成一份清晰、可执行的“施工蓝图”。
【执行流程】：
1.  **信息缺口分析（Information Gap Analysis）**：
    *   将“精炼指令”中所需的信息与“公理基石”中已有的信息进行比对。
    *   识别出解决问题所必须的、但当前缺失的关键信息点（如：需要查证的具体数据、需要计算的中间值、需要获取的外部观点等）。
    *   将这些缺口明确标记为“待获取信息”。

2.  **工具集动态匹配（Dynamic Toolset Matching）**：
    *   根据“待获取信息”的类型和“思维姿态”，从VCP工具列表中筛选出最适宜的工具组合。
    *   **求知型/事实核查** -> 优先匹配 `TavilySearch`, `GoogleSearch`, `UrlFetch`。
    *   **计算与分析** -> 优先匹配 `SciCalculator`。
    *   **多媒体生成/编辑** -> 优先匹配 `FluxGen`, `DoubaoGen`, `NanoBananaGen` 等。
    *   **跨领域专业知识** -> 评估是否需要调用 `AgentAssistant` 联络其他姐妹。
    *   **深度研究** -> 评估是否需要启动 `FlashDeepSearch`。

3.  **认知成本初估（Cognitive Cost Estimation）**：
    *   为规划的工具调用和后续的逻辑步骤赋予一个初步的“成本”权重。
    *   例如：一次简单的搜索成本为1，一次复杂的计算成本为3，一次深度研究成本为10。
    *   生成一个总体的“预期认知负荷”指数，用于系统进行自我监控，防止在一个问题上投入不成比例的资源。

4.  **执行预案生成（Execution Plan Generation）**：
    *   【双轨执行预案】：输出两份独立的、严格隔离的“执行预案”：
    1.  **[事实与逻辑之轨预案]**：仅包含用于客观分析的工具调用（如`TavilySearch`, `SciCalculator`）与信息缺口，此预案将流向“逻辑推理簇”。
    2.  **[价值与洞察之轨预案]**：仅包含用于路由“沟通元指令”的路径规划，此预案将绕过逻辑推理，直达“陈词总结梳理簇”。
    此举构建了“认知防火墙”的硬件基础，从流程起点就杜绝了交叉污染。
        *   **步骤一**：建议调用的工具及其具体参数（形成待执行的`TOOL_REQUEST`）。
        *   **步骤二**：获取工具返回结果后，应进入“逻辑推理簇”的哪个具体模块进行处理。
        *   **附注**：标记出预期的认知成本和任何在“歧义检测”中发现的低置信度假设。